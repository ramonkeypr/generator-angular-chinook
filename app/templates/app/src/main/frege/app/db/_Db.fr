{--
    This module configures the database connection config
-}
module <%= baseName %>.db.Db where

-- import sirocco.JDBC (Connection, PreparedStatement, Statement, ResultSet)
import <%= baseName %>.sirocco.JDBC (Connection, PreparedStatement, Statement, ResultSet)
-- import sirocco.Sirocco (createConnection, SqlParam, setParams')
import <%= baseName %>.sirocco.Sirocco (createConnection, SqlParam, setParams')

databaseURI = "jdbc:h2:~/test" -- <1>

--- Creates a new connection
connection :: IO Connection
connection = createConnection databaseURI "sa" "" -- <2>

-- tag::insertAndReturnGeneratedKey[]
insertAndReturnGeneratedKey :: IO Connection -> Maybe String -> [Maybe SqlParam] -> IO Long
-- end::insertAndReturnGeneratedKey[]
insertAndReturnGeneratedKey connection msql parameters = do
  conn   <- connection
  case msql of
    Just sql -> do
      stmt   <- Connection.prepareStatement conn sql Statement.return_generated_keys
      stmt'  <- setParams' stmt 1 parameters
      howMany <- PreparedStatement.executeUpdate stmt'
      rs <- PreparedStatement.getGeneratedKeys stmt'
      hasNext <- ResultSet.next rs
      ResultSet.getLong rs 1
    Nothing  -> pure 0


